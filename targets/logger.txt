<apps.jizzu.simpletodo.activity.EditTaskActivity: void <clinit>()>
<apps.jizzu.simpletodo.widget.WidgetProvider: void <clinit>()>
<apps.jizzu.simpletodo.activity.AddTaskActivity: void <clinit>()>
<apps.jizzu.simpletodo.alarm.AlarmReceiver: void <clinit>()>
<apps.jizzu.simpletodo.activity.MainActivity: void <clinit>()>
<kotlin.jvm.internal.Reflection: void <clinit>()>
<kotlin.jvm.internal.Reflection: kotlin.reflect.KProperty1 property1(kotlin.jvm.internal.PropertyReference1)>
<kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>
<kotlin.jvm.internal.ReflectionFactory: void <init>()>
<kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>
<kotlin.jvm.internal.ClassReference: void <init>(java.lang.Class)>
<kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>
<kotlin.jvm.internal.Intrinsics: void throwParameterIsNullException(java.lang.String)>
<kotlin.jvm.internal.Intrinsics: java.lang.Throwable sanitizeStackTrace(java.lang.Throwable)>
<kotlin.jvm.internal.Intrinsics: java.lang.Throwable sanitizeStackTrace(java.lang.Throwable,java.lang.String)>
<kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KProperty1 property1(kotlin.jvm.internal.PropertyReference1)>
<apps.jizzu.simpletodo.activity.MainActivity$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<apps.jizzu.simpletodo.activity.MainActivity$Companion: void <init>()>
<kotlin.jvm.internal.PropertyReference1Impl: void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)>
<kotlin.jvm.internal.PropertyReference1: void <init>()>
<kotlin.jvm.internal.PropertyReference: void <init>()>
<kotlin.jvm.internal.CallableReference: void <init>()>
<kotlin.jvm.internal.CallableReference: void <clinit>()>
<kotlin.jvm.internal.CallableReference$NoReceiver: void <clinit>()>
<kotlin.jvm.internal.CallableReference$NoReceiver: kotlin.jvm.internal.CallableReference$NoReceiver access$000()>
<kotlin.jvm.internal.CallableReference$NoReceiver: void <init>()>
<kotlin.jvm.internal.CallableReference: void <init>(java.lang.Object)>
<apps.jizzu.simpletodo.alarm.AlarmReceiver$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<apps.jizzu.simpletodo.alarm.AlarmReceiver$Companion: void <init>()>
<apps.jizzu.simpletodo.widget.WidgetProvider$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<apps.jizzu.simpletodo.widget.WidgetProvider$Companion: void <init>()>
<apps.jizzu.simpletodo.widget.WidgetProvider: void <init>()>
<apps.jizzu.simpletodo.widget.WidgetProvider: void onReceive(android.content.Context,android.content.Intent)>
<apps.jizzu.simpletodo.widget.WidgetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>
<apps.jizzu.simpletodo.activity.AddTaskActivity$onCreate$5: void <init>(apps.jizzu.simpletodo.activity.AddTaskActivity)>
<apps.jizzu.simpletodo.activity.AddTaskActivity$onCreate$5: void onClick(android.view.View)>
<apps.jizzu.simpletodo.activity.AddTaskActivity: void access$hideKeyboard(apps.jizzu.simpletodo.activity.AddTaskActivity,android.widget.EditText)>
<apps.jizzu.simpletodo.activity.AddTaskActivity: android.widget.EditText access$getMTitle$p(apps.jizzu.simpletodo.activity.AddTaskActivity)>
<apps.jizzu.simpletodo.activity.AddTaskActivity: java.util.Calendar access$getMCalendar$p(apps.jizzu.simpletodo.activity.AddTaskActivity)>
<apps.jizzu.simpletodo.activity.AddTaskActivity: android.widget.EditText access$getMTime$p(apps.jizzu.simpletodo.activity.AddTaskActivity)>
<apps.jizzu.simpletodo.activity.AddTaskActivity: android.widget.EditText access$getMDate$p(apps.jizzu.simpletodo.activity.AddTaskActivity)>
<kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>
<kotlin.jvm.internal.Intrinsics: void throwUninitializedProperty(java.lang.String)>
<kotlin.UninitializedPropertyAccessException: void <init>(java.lang.String)>
<apps.jizzu.simpletodo.activity.AddTaskActivity$onCreate$1$2: void <init>(apps.jizzu.simpletodo.activity.AddTaskActivity$onCreate$1)>
<apps.jizzu.simpletodo.activity.AddTaskActivity$onCreate$1$2: void onAnimationStart(android.animation.Animator)>
<apps.jizzu.simpletodo.activity.AddTaskActivity$onCreate$1$2: void onAnimationRepeat(android.animation.Animator)>
<apps.jizzu.simpletodo.activity.AddTaskActivity$onCreate$1$2: void onAnimationEnd(android.animation.Animator)>
<apps.jizzu.simpletodo.activity.AddTaskActivity$onCreate$1$2: void onAnimationCancel(android.animation.Animator)>
<apps.jizzu.simpletodo.activity.AddTaskActivity: android.widget.RelativeLayout access$getMReminderLayout$p(apps.jizzu.simpletodo.activity.AddTaskActivity)>
<apps.jizzu.simpletodo.activity.AddTaskActivity$onCreate$1: void <init>(apps.jizzu.simpletodo.activity.AddTaskActivity)>
<apps.jizzu.simpletodo.activity.AddTaskActivity$onCreate$4: void <init>(apps.jizzu.simpletodo.activity.AddTaskActivity)>
<apps.jizzu.simpletodo.activity.AddTaskActivity$onCreate$4: void onClick(android.view.View)>
<apps.jizzu.simpletodo.fragment.TimePickerFragment: void <init>()>
<apps.jizzu.simpletodo.activity.AddTaskActivity$onCreate$3: void <init>(apps.jizzu.simpletodo.activity.AddTaskActivity)>
<apps.jizzu.simpletodo.activity.AddTaskActivity$onCreate$3: void onClick(android.view.View)>
<apps.jizzu.simpletodo.fragment.DatePickerFragment: void <init>()>
<apps.jizzu.simpletodo.activity.AddTaskActivity$onCreate$1: void onClick(android.view.View)>
<apps.jizzu.simpletodo.activity.AddTaskActivity: android.support.v7.widget.SwitchCompat access$getMReminderSwitch$p(apps.jizzu.simpletodo.activity.AddTaskActivity)>
<apps.jizzu.simpletodo.activity.AddTaskActivity$onCreate$1$1: void <init>(apps.jizzu.simpletodo.activity.AddTaskActivity$onCreate$1)>
<apps.jizzu.simpletodo.activity.AddTaskActivity$onCreate$2: void <init>(apps.jizzu.simpletodo.activity.AddTaskActivity)>
<apps.jizzu.simpletodo.activity.AddTaskActivity$onCreate$2: void onClick(android.view.View)>
<apps.jizzu.simpletodo.activity.AddTaskActivity$onCreate$1$1: void onAnimationCancel(android.animation.Animator)>
<apps.jizzu.simpletodo.activity.AddTaskActivity$onCreate$1$1: void onAnimationRepeat(android.animation.Animator)>
<apps.jizzu.simpletodo.activity.AddTaskActivity$onCreate$1$1: void onAnimationEnd(android.animation.Animator)>
<apps.jizzu.simpletodo.activity.AddTaskActivity$onCreate$1$1: void onAnimationStart(android.animation.Animator)>
<apps.jizzu.simpletodo.activity.AddTaskActivity: void <init>()>
<apps.jizzu.simpletodo.activity.AddTaskActivity: void onCreate(android.os.Bundle)>
<apps.jizzu.simpletodo.activity.AddTaskActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<apps.jizzu.simpletodo.activity.AddTaskActivity: void onStop()>
<kotterknife.ButterKnifeKt: kotlin.properties.ReadOnlyProperty bindView(android.app.Activity,int)>
<kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>
<kotlin.jvm.internal.Intrinsics: void throwNpe()>
<kotterknife.ButterKnifeKt: kotterknife.Lazy required(int,kotlin.jvm.functions.Function2)>
<kotterknife.ButterKnifeKt: kotlin.jvm.functions.Function2 getViewFinder(android.app.Activity)>
<kotterknife.ButterKnifeKt$viewFinder$2: void <clinit>()>
<kotterknife.ButterKnifeKt$viewFinder$2: void <init>()>
<kotlin.jvm.internal.Lambda: void <init>(int)>
<kotterknife.ButterKnifeKt$required$1: void <init>(kotlin.jvm.functions.Function2,int)>
<kotterknife.Lazy: void <init>(kotlin.jvm.functions.Function2)>
<kotterknife.Lazy$EMPTY: void <clinit>()>
<kotterknife.Lazy$EMPTY: void <init>()>
<kotlin.KotlinNullPointerException: void <init>()>
<apps.jizzu.simpletodo.activity.AddTaskActivity: android.widget.EditText getMTitle()>
<apps.jizzu.simpletodo.activity.AddTaskActivity: void hideKeyboard(android.widget.EditText)>
<kotlin.TypeCastException: void <init>(java.lang.String)>
<apps.jizzu.simpletodo.activity.MainActivity$Companion: void setMActivityIsShown(boolean)>
<apps.jizzu.simpletodo.activity.MainActivity: void access$setMActivityIsShown$cp(boolean)>
<apps.jizzu.simpletodo.activity.AddTaskActivity: android.view.View _$_findCachedViewById(int)>
<apps.jizzu.simpletodo.activity.AddTaskActivity: android.widget.RelativeLayout getMReminderLayout()>
<apps.jizzu.simpletodo.activity.AddTaskActivity: android.support.v7.widget.SwitchCompat getMReminderSwitch()>
<apps.jizzu.simpletodo.activity.AddTaskActivity: android.widget.EditText getMDate()>
<apps.jizzu.simpletodo.activity.AddTaskActivity: android.widget.EditText getMTime()>
<apps.jizzu.simpletodo.settings.SettingsActivity: void <init>()>
<apps.jizzu.simpletodo.settings.SettingsActivity: void onCreate(android.os.Bundle)>
<apps.jizzu.simpletodo.settings.SettingsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<apps.jizzu.simpletodo.settings.SettingsActivity: void onPause()>
<apps.jizzu.simpletodo.settings.SettingsFragment: void <clinit>()>
<apps.jizzu.simpletodo.settings.SettingsFragment$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<apps.jizzu.simpletodo.settings.SettingsFragment$Companion: void <init>()>
<apps.jizzu.simpletodo.settings.SettingsFragment: void <init>()>
<apps.jizzu.simpletodo.alarm.AlarmReceiver: void <init>()>
<apps.jizzu.simpletodo.alarm.AlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>
<kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>
<apps.jizzu.simpletodo.utils.MyApplication: void <clinit>()>
<apps.jizzu.simpletodo.utils.MyApplication$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<apps.jizzu.simpletodo.utils.MyApplication$Companion: void <init>()>
<apps.jizzu.simpletodo.utils.MyApplication$Companion: boolean isActivityVisible()>
<apps.jizzu.simpletodo.utils.MyApplication: boolean access$isActivityVisible$cp()>
<apps.jizzu.simpletodo.widget.WidgetService: void <init>()>
<apps.jizzu.simpletodo.widget.WidgetService: android.widget.RemoteViewsService$RemoteViewsFactory onGetViewFactory(android.content.Intent)>
<apps.jizzu.simpletodo.widget.WidgetService: apps.jizzu.simpletodo.widget.ViewFactory onGetViewFactory(android.content.Intent)>
<apps.jizzu.simpletodo.widget.ViewFactory: void <init>(android.content.Context)>
<apps.jizzu.simpletodo.activity.MainActivity$onCreate$3: void <init>(apps.jizzu.simpletodo.activity.MainActivity)>
<apps.jizzu.simpletodo.activity.MainActivity$onCreate$3: void onClick(android.view.View)>
<top.wefor.circularanim.CircularAnim: top.wefor.circularanim.CircularAnim$FullActivityBuilder fullActivity(android.app.Activity,android.view.View)>
<apps.jizzu.simpletodo.activity.MainActivity: apps.jizzu.simpletodo.utils.PreferenceHelper access$getMPreferenceHelper$p(apps.jizzu.simpletodo.activity.MainActivity)>
<top.wefor.circularanim.CircularAnim$FullActivityBuilder: top.wefor.circularanim.CircularAnim$FullActivityBuilder colorOrImageRes(int)>
<top.wefor.circularanim.CircularAnim$FullActivityBuilder: top.wefor.circularanim.CircularAnim$FullActivityBuilder duration(long)>
<top.wefor.circularanim.CircularAnim$FullActivityBuilder: void go(top.wefor.circularanim.CircularAnim$OnAnimationEndListener)>
<top.wefor.circularanim.CircularAnim: long access$300()>
<top.wefor.circularanim.CircularAnim: long getFullActivityMills()>
<top.wefor.circularanim.CircularAnim$FullActivityBuilder$1: void <init>(top.wefor.circularanim.CircularAnim$FullActivityBuilder,android.widget.ImageView,int,int,int,long,android.view.ViewGroup)>
<top.wefor.circularanim.CircularAnim$FullActivityBuilder: void doOnEnd()>
<apps.jizzu.simpletodo.activity.MainActivity$onCreate$3$1: void onAnimationEnd()>
<top.wefor.circularanim.CircularAnim$FullActivityBuilder: void <init>(android.app.Activity,android.view.View)>
<top.wefor.circularanim.CircularAnim: int access$200()>
<top.wefor.circularanim.CircularAnim: int getColorOrImageRes()>
<apps.jizzu.simpletodo.activity.MainActivity$onCreate$3$1: void <init>(apps.jizzu.simpletodo.activity.MainActivity$onCreate$3)>
<hotchemi.android.rate.DialogManager$2: void <init>(android.content.Context,hotchemi.android.rate.OnClickButtonListener)>
<hotchemi.android.rate.DialogManager$2: void onClick(android.content.DialogInterface,int)>
<hotchemi.android.rate.PreferenceHelper: void setRemindInterval(android.content.Context)>
<hotchemi.android.rate.PreferenceHelper: android.content.SharedPreferences$Editor getPreferencesEditor(android.content.Context)>
<hotchemi.android.rate.PreferenceHelper: android.content.SharedPreferences getPreferences(android.content.Context)>
<hotchemi.android.rate.DialogManager$1: void <init>(hotchemi.android.rate.DialogOptions,android.content.Context,hotchemi.android.rate.OnClickButtonListener)>
<hotchemi.android.rate.DialogManager$1: void onClick(android.content.DialogInterface,int)>
<hotchemi.android.rate.StoreType: void <clinit>()>
<hotchemi.android.rate.PreferenceHelper: void setAgreeShowDialog(android.content.Context,boolean)>
<hotchemi.android.rate.IntentHelper: android.content.Intent createIntentForAmazonAppstore(android.content.Context)>
<hotchemi.android.rate.IntentHelper: android.content.Intent createIntentForGooglePlay(android.content.Context)>
<hotchemi.android.rate.UriHelper: android.net.Uri getAmazonAppstore(java.lang.String)>
<hotchemi.android.rate.UriHelper: boolean isPackageExists(android.content.Context,java.lang.String)>
<hotchemi.android.rate.UriHelper: android.net.Uri getGooglePlay(java.lang.String)>
<hotchemi.android.rate.StoreType: void <init>(java.lang.String,int)>
<hotchemi.android.rate.DialogOptions: void <init>()>
<hotchemi.android.rate.DialogManager$3: void <init>(android.content.Context,hotchemi.android.rate.OnClickButtonListener)>
<hotchemi.android.rate.DialogManager$3: void onClick(android.content.DialogInterface,int)>
<apps.jizzu.simpletodo.adapter.RecyclerViewEmptySupport: void <init>(android.content.Context)>
<apps.jizzu.simpletodo.adapter.RecyclerViewEmptySupport: void setAdapter(android.support.v7.widget.RecyclerView$Adapter)>
<apps.jizzu.simpletodo.adapter.RecyclerViewEmptySupport: void checkIfEmpty()>
<apps.jizzu.simpletodo.activity.MainActivity$Companion: boolean getMSearchViewIsOpen()>
<apps.jizzu.simpletodo.activity.MainActivity: boolean access$getMSearchViewIsOpen$cp()>
<apps.jizzu.simpletodo.adapter.RecyclerViewEmptySupport$observer$1: void <init>(apps.jizzu.simpletodo.adapter.RecyclerViewEmptySupport)>
<com.miguelcatalan.materialsearchview.MaterialSearchView: void <init>(android.content.Context)>
<com.miguelcatalan.materialsearchview.MaterialSearchView: void onRestoreInstanceState(android.os.Parcelable)>
<com.miguelcatalan.materialsearchview.MaterialSearchView: void clearFocus()>
<com.miguelcatalan.materialsearchview.MaterialSearchView: boolean requestFocus(int,android.graphics.Rect)>
<com.miguelcatalan.materialsearchview.MaterialSearchView: void setBackground(android.graphics.drawable.Drawable)>
<com.miguelcatalan.materialsearchview.MaterialSearchView: void setBackgroundColor(int)>
<com.miguelcatalan.materialsearchview.MaterialSearchView: android.os.Parcelable onSaveInstanceState()>
<com.miguelcatalan.materialsearchview.MaterialSearchView$SavedState: void <clinit>()>
<com.miguelcatalan.materialsearchview.MaterialSearchView$SavedState$1: void <init>()>
<com.miguelcatalan.materialsearchview.MaterialSearchView$SavedState: void <init>(android.os.Parcelable)>
<com.miguelcatalan.materialsearchview.MaterialSearchView: void hideKeyboard(android.view.View)>
<com.miguelcatalan.materialsearchview.MaterialSearchView: void showSearch(boolean)>
<com.miguelcatalan.materialsearchview.MaterialSearchView: void setQuery(java.lang.CharSequence,boolean)>
<com.miguelcatalan.materialsearchview.MaterialSearchView: void onSubmitQuery()>
<com.miguelcatalan.materialsearchview.MaterialSearchView: void closeSearch()>
<com.miguelcatalan.materialsearchview.MaterialSearchView: boolean isSearchOpen()>
<com.miguelcatalan.materialsearchview.MaterialSearchView: void dismissSuggestions()>
<com.miguelcatalan.materialsearchview.MaterialSearchView: void setVisibleWithAnimation()>
<com.miguelcatalan.materialsearchview.utils.AnimationUtil: void fadeInView(android.view.View,int,com.miguelcatalan.materialsearchview.utils.AnimationUtil$AnimationListener)>
<com.miguelcatalan.materialsearchview.utils.AnimationUtil: void reveal(android.view.View,com.miguelcatalan.materialsearchview.utils.AnimationUtil$AnimationListener)>
<com.miguelcatalan.materialsearchview.utils.AnimationUtil: void <clinit>()>
<com.miguelcatalan.materialsearchview.utils.AnimationUtil$2: void <init>(com.miguelcatalan.materialsearchview.utils.AnimationUtil$AnimationListener,android.view.View)>
<com.miguelcatalan.materialsearchview.utils.AnimationUtil$1: void <init>(com.miguelcatalan.materialsearchview.utils.AnimationUtil$AnimationListener)>
<com.miguelcatalan.materialsearchview.MaterialSearchView$7: void <init>(com.miguelcatalan.materialsearchview.MaterialSearchView)>
<com.miguelcatalan.materialsearchview.MaterialSearchView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.miguelcatalan.materialsearchview.MaterialSearchView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.miguelcatalan.materialsearchview.MaterialSearchView$4: void <init>(com.miguelcatalan.materialsearchview.MaterialSearchView)>
<com.miguelcatalan.materialsearchview.MaterialSearchView: void initiateView()>
<com.miguelcatalan.materialsearchview.MaterialSearchView: void initStyle(android.util.AttributeSet,int)>
<com.miguelcatalan.materialsearchview.R$styleable: void <clinit>()>
<com.miguelcatalan.materialsearchview.MaterialSearchView: void setTextColor(int)>
<com.miguelcatalan.materialsearchview.MaterialSearchView: void setHintTextColor(int)>
<com.miguelcatalan.materialsearchview.MaterialSearchView: void setHint(java.lang.CharSequence)>
<com.miguelcatalan.materialsearchview.MaterialSearchView: void setVoiceIcon(android.graphics.drawable.Drawable)>
<com.miguelcatalan.materialsearchview.MaterialSearchView: void setCloseIcon(android.graphics.drawable.Drawable)>
<com.miguelcatalan.materialsearchview.MaterialSearchView: void setBackIcon(android.graphics.drawable.Drawable)>
<com.miguelcatalan.materialsearchview.MaterialSearchView: void setSuggestionBackground(android.graphics.drawable.Drawable)>
<com.miguelcatalan.materialsearchview.MaterialSearchView: void setSuggestionIcon(android.graphics.drawable.Drawable)>
<com.miguelcatalan.materialsearchview.MaterialSearchView: void showVoice(boolean)>
<com.miguelcatalan.materialsearchview.MaterialSearchView: void initSearchView()>
<com.miguelcatalan.materialsearchview.MaterialSearchView: void setAnimationDuration(int)>
<com.miguelcatalan.materialsearchview.MaterialSearchView$3: void <init>(com.miguelcatalan.materialsearchview.MaterialSearchView)>
<com.miguelcatalan.materialsearchview.MaterialSearchView$2: void <init>(com.miguelcatalan.materialsearchview.MaterialSearchView)>
<com.miguelcatalan.materialsearchview.MaterialSearchView$1: void <init>(com.miguelcatalan.materialsearchview.MaterialSearchView)>
<com.miguelcatalan.materialsearchview.MaterialSearchView: boolean isVoiceAvailable()>
<apps.jizzu.simpletodo.activity.MainActivity: void <init>()>
<apps.jizzu.simpletodo.activity.MainActivity: void onCreate(android.os.Bundle)>
<apps.jizzu.simpletodo.activity.MainActivity: void onResume()>
<apps.jizzu.simpletodo.activity.MainActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<apps.jizzu.simpletodo.activity.MainActivity: void onBackPressed()>
<apps.jizzu.simpletodo.activity.MainActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<apps.jizzu.simpletodo.activity.MainActivity: void onActivityResult(int,int,android.content.Intent)>
<apps.jizzu.simpletodo.activity.MainActivity: void onPause()>
<apps.jizzu.simpletodo.activity.MainActivity: void onStop()>
<io.github.tonnyl.whatsnew.WhatsNew: void <clinit>()>
<hotchemi.android.rate.AppRate: boolean showRateDialogIfMeetsConditions(android.app.Activity)>
<hotchemi.android.rate.AppRate: hotchemi.android.rate.AppRate 'with'(android.content.Context)>
<apps.jizzu.simpletodo.database.DBHelper: void <clinit>()>
<apps.jizzu.simpletodo.adapter.RecyclerViewAdapter: void <clinit>()>
<apps.jizzu.simpletodo.utils.PreferenceHelper: void <clinit>()>
<apps.jizzu.simpletodo.alarm.AlarmHelper: void <clinit>()>
<io.github.tonnyl.whatsnew.item.WhatsNewItem: void <clinit>()>
<hotchemi.android.rate.AppRate: hotchemi.android.rate.AppRate setInstallDays(int)>
<hotchemi.android.rate.AppRate: hotchemi.android.rate.AppRate setLaunchTimes(int)>
<hotchemi.android.rate.AppRate: hotchemi.android.rate.AppRate setRemindInterval(int)>
<hotchemi.android.rate.AppRate: void monitor()>
<hotchemi.android.rate.PreferenceHelper: boolean isFirstLaunch(android.content.Context)>
<hotchemi.android.rate.PreferenceHelper: void setLaunchTimes(android.content.Context,int)>
<hotchemi.android.rate.PreferenceHelper: int getLaunchTimes(android.content.Context)>
<hotchemi.android.rate.PreferenceHelper: void setInstallDate(android.content.Context)>
<io.github.tonnyl.whatsnew.item.WhatsNewItem$CREATOR: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<io.github.tonnyl.whatsnew.item.WhatsNewItem$CREATOR: void <init>()>
<apps.jizzu.simpletodo.alarm.AlarmHelper$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<apps.jizzu.simpletodo.alarm.AlarmHelper$Companion: void <init>()>
<apps.jizzu.simpletodo.utils.PreferenceHelper$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<apps.jizzu.simpletodo.utils.PreferenceHelper$Companion: void <init>()>
<apps.jizzu.simpletodo.adapter.RecyclerViewAdapter$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<apps.jizzu.simpletodo.adapter.RecyclerViewAdapter$Companion: void <init>()>
<apps.jizzu.simpletodo.database.DBHelper$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<apps.jizzu.simpletodo.database.DBHelper$Companion: void <init>()>
<hotchemi.android.rate.AppRate: void <init>(android.content.Context)>
<hotchemi.android.rate.AppRate: boolean shouldShowRateDialog()>
<hotchemi.android.rate.AppRate: void showRateDialog(android.app.Activity)>
<hotchemi.android.rate.PreferenceHelper: boolean getIsAgreeShowDialog(android.content.Context)>
<hotchemi.android.rate.DialogManager: android.app.Dialog create(android.content.Context,hotchemi.android.rate.DialogOptions)>
<hotchemi.android.rate.Utils: android.app.AlertDialog$Builder getDialogBuilder(android.content.Context)>
<hotchemi.android.rate.Utils: boolean underHoneyComb()>
<hotchemi.android.rate.Utils: int getDialogTheme()>
<hotchemi.android.rate.Utils: boolean isLollipop()>
<hotchemi.android.rate.DialogOptions: java.lang.String getMessageText(android.content.Context)>
<hotchemi.android.rate.DialogOptions: boolean shouldShowTitle()>
<hotchemi.android.rate.DialogOptions: java.lang.String getTitleText(android.content.Context)>
<hotchemi.android.rate.DialogOptions: boolean getCancelable()>
<hotchemi.android.rate.DialogOptions: android.view.View getView()>
<hotchemi.android.rate.DialogOptions: hotchemi.android.rate.OnClickButtonListener getListener()>
<hotchemi.android.rate.DialogOptions: java.lang.String getPositiveText(android.content.Context)>
<hotchemi.android.rate.DialogOptions: boolean shouldShowNeutralButton()>
<hotchemi.android.rate.DialogOptions: java.lang.String getNeutralText(android.content.Context)>
<hotchemi.android.rate.DialogOptions: boolean shouldShowNegativeButton()>
<hotchemi.android.rate.DialogOptions: java.lang.String getNegativeText(android.content.Context)>
<hotchemi.android.rate.AppRate: boolean isOverLaunchTimes()>
<hotchemi.android.rate.AppRate: boolean isOverInstallDate()>
<hotchemi.android.rate.AppRate: boolean isOverRemindDate()>
<hotchemi.android.rate.PreferenceHelper: long getInstallDate(android.content.Context)>
<hotchemi.android.rate.AppRate: boolean isOverDate(long,int)>
<hotchemi.android.rate.PreferenceHelper: long getRemindInterval(android.content.Context)>
<io.github.tonnyl.whatsnew.WhatsNew$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<io.github.tonnyl.whatsnew.WhatsNew$Companion: void <init>()>
<apps.jizzu.simpletodo.activity.MainActivity: android.support.design.widget.FloatingActionButton getMFab()>
<apps.jizzu.simpletodo.activity.MainActivity: void updateWidget()>
<apps.jizzu.simpletodo.utils.MyApplication$Companion: void activityPaused()>
<apps.jizzu.simpletodo.utils.MyApplication$Companion: void setActivityVisible(boolean)>
<apps.jizzu.simpletodo.utils.MyApplication: void access$setActivityVisible$cp(boolean)>
<apps.jizzu.simpletodo.model.ModelTask: void <init>()>
<apps.jizzu.simpletodo.model.ModelTask: void setTitle(java.lang.String)>
<apps.jizzu.simpletodo.model.ModelTask: void setDate(long)>
<apps.jizzu.simpletodo.model.ModelTask: void setPosition(int)>
<apps.jizzu.simpletodo.model.ModelTask: long getDate()>
<apps.jizzu.simpletodo.model.ModelTask: void setId(long)>
<apps.jizzu.simpletodo.activity.MainActivity: void updateGeneralNotification()>
<apps.jizzu.simpletodo.activity.MainActivity: void showGeneralNotification()>
<apps.jizzu.simpletodo.activity.MainActivity: void removeGeneralNotification()>
<apps.jizzu.simpletodo.adapter.RecyclerViewAdapter$Companion: java.util.List getMTaskList()>
<apps.jizzu.simpletodo.adapter.RecyclerViewAdapter: java.util.List access$getMTaskList$cp()>
<apps.jizzu.simpletodo.activity.MainActivity: com.miguelcatalan.materialsearchview.MaterialSearchView getMSearchView()>
<apps.jizzu.simpletodo.utils.MyApplication$Companion: void activityResumed()>
<apps.jizzu.simpletodo.activity.MainActivity$onResume$1: void run()>
<apps.jizzu.simpletodo.activity.MainActivity: android.support.design.widget.FloatingActionButton access$getMFab$p(apps.jizzu.simpletodo.activity.MainActivity)>
<apps.jizzu.simpletodo.activity.MainActivity: android.content.Context access$getMContext$p(apps.jizzu.simpletodo.activity.MainActivity)>
<apps.jizzu.simpletodo.utils.Interpolator: void <init>(double,double)>
<apps.jizzu.simpletodo.activity.MainActivity$onResume$1: void <init>(apps.jizzu.simpletodo.activity.MainActivity)>
<apps.jizzu.simpletodo.activity.MainActivity$onCreate$4: void <init>(apps.jizzu.simpletodo.activity.MainActivity)>
<apps.jizzu.simpletodo.activity.MainActivity$onCreate$2: void <init>(apps.jizzu.simpletodo.activity.MainActivity)>
<apps.jizzu.simpletodo.activity.MainActivity$onCreate$1: void <init>(apps.jizzu.simpletodo.activity.MainActivity)>
<apps.jizzu.simpletodo.database.DBHelper$Companion: apps.jizzu.simpletodo.database.DBHelper getInstance(android.content.Context)>
<apps.jizzu.simpletodo.database.DBHelper: apps.jizzu.simpletodo.database.DBHelper access$getMInstance$cp()>
<apps.jizzu.simpletodo.database.DBHelper: void access$setMInstance$cp(apps.jizzu.simpletodo.database.DBHelper)>
<apps.jizzu.simpletodo.database.DBHelper: void <init>(android.content.Context,kotlin.jvm.internal.DefaultConstructorMarker)>
<apps.jizzu.simpletodo.database.DBHelper: void <init>(android.content.Context)>
<apps.jizzu.simpletodo.activity.MainActivity$onCreate$callback$1: void <init>(apps.jizzu.simpletodo.activity.MainActivity,apps.jizzu.simpletodo.adapter.RecyclerViewAdapter,android.support.v7.widget.RecyclerView)>
<apps.jizzu.simpletodo.adapter.ListItemTouchHelper: void <init>(apps.jizzu.simpletodo.adapter.RecyclerViewAdapter,android.support.v7.widget.RecyclerView)>
<apps.jizzu.simpletodo.adapter.RecyclerViewAdapter$Companion: apps.jizzu.simpletodo.adapter.RecyclerViewAdapter getInstance()>
<apps.jizzu.simpletodo.adapter.RecyclerViewAdapter: apps.jizzu.simpletodo.adapter.RecyclerViewAdapter access$getMInstance$cp()>
<apps.jizzu.simpletodo.adapter.RecyclerViewAdapter: void access$setMInstance$cp(apps.jizzu.simpletodo.adapter.RecyclerViewAdapter)>
<apps.jizzu.simpletodo.adapter.RecyclerViewAdapter: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<apps.jizzu.simpletodo.adapter.RecyclerViewAdapter: void <init>()>
<apps.jizzu.simpletodo.alarm.AlarmHelper$Companion: apps.jizzu.simpletodo.alarm.AlarmHelper getInstance()>
<apps.jizzu.simpletodo.alarm.AlarmHelper: apps.jizzu.simpletodo.alarm.AlarmHelper access$getMInstance$cp()>
<apps.jizzu.simpletodo.alarm.AlarmHelper: void access$setMInstance$cp(apps.jizzu.simpletodo.alarm.AlarmHelper)>
<apps.jizzu.simpletodo.alarm.AlarmHelper: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<apps.jizzu.simpletodo.alarm.AlarmHelper: void <init>()>
<apps.jizzu.simpletodo.adapter.RecyclerViewEmptySupport$EmptyAdapter: void <init>()>
<apps.jizzu.simpletodo.adapter.RecyclerViewAdapter: void registerCallback(apps.jizzu.simpletodo.adapter.RecyclerViewAdapter$AdapterCallback)>
<apps.jizzu.simpletodo.adapter.RecyclerViewEmptySupport: void setEmptyView(android.view.View)>
<apps.jizzu.simpletodo.utils.PreferenceHelper$Companion: apps.jizzu.simpletodo.utils.PreferenceHelper getInstance()>
<apps.jizzu.simpletodo.utils.PreferenceHelper: apps.jizzu.simpletodo.utils.PreferenceHelper access$getMInstance$cp()>
<apps.jizzu.simpletodo.utils.PreferenceHelper: void access$setMInstance$cp(apps.jizzu.simpletodo.utils.PreferenceHelper)>
<apps.jizzu.simpletodo.utils.PreferenceHelper: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<apps.jizzu.simpletodo.utils.PreferenceHelper: void <init>()>
<apps.jizzu.simpletodo.utils.PreferenceHelper: void init(android.content.Context)>
<apps.jizzu.simpletodo.utils.PreferenceHelper: boolean getBoolean(java.lang.String)>
<apps.jizzu.simpletodo.alarm.AlarmHelper: void setAlarm(apps.jizzu.simpletodo.model.ModelTask)>
<apps.jizzu.simpletodo.model.ModelTask: java.lang.String getTitle()>
<apps.jizzu.simpletodo.model.ModelTask: long getTimeStamp()>
<apps.jizzu.simpletodo.alarm.AlarmHelper: void init(android.content.Context)>
<io.github.tonnyl.whatsnew.item.WhatsNewItem: void <init>(java.lang.String,java.lang.String)>
<io.github.tonnyl.whatsnew.WhatsNew$Companion: io.github.tonnyl.whatsnew.WhatsNew newInstance(io.github.tonnyl.whatsnew.item.WhatsNewItem[])>
<io.github.tonnyl.whatsnew.WhatsNew: void setTitleColor(int)>
<io.github.tonnyl.whatsnew.WhatsNew: void setTitleText(java.lang.CharSequence)>
<io.github.tonnyl.whatsnew.WhatsNew: void setButtonText(java.lang.String)>
<io.github.tonnyl.whatsnew.WhatsNew: void setButtonBackground(int)>
<io.github.tonnyl.whatsnew.WhatsNew: void setButtonTextColor(int)>
<io.github.tonnyl.whatsnew.WhatsNew: void presentAutomatically(android.support.v7.app.AppCompatActivity)>
<io.github.tonnyl.whatsnew.WhatsNew$WhenMappings: void <clinit>()>
<io.github.tonnyl.whatsnew.WhatsNew$Companion: java.lang.String access$getLAST_VERSION_NAME$p(io.github.tonnyl.whatsnew.WhatsNew$Companion)>
<io.github.tonnyl.whatsnew.WhatsNew$Companion: java.lang.String access$getLAST_VERSION_CODE$p(io.github.tonnyl.whatsnew.WhatsNew$Companion)>
<kotlin.text.StringsKt__StringsJVMKt: boolean isBlank(java.lang.CharSequence)>
<io.github.tonnyl.whatsnew.util.PresentationOption: void <clinit>()>
<kotlin.text.Regex: void <clinit>()>
<io.github.tonnyl.whatsnew.util.PresentationOption: io.github.tonnyl.whatsnew.util.PresentationOption[] values()>
<kotlin.text.CharsKt__CharJVMKt: boolean isWhitespace(char)>
<kotlin.text.StringsKt__StringsKt: kotlin.ranges.IntRange getIndices(java.lang.CharSequence)>
<kotlin.ranges.IntRange: void <clinit>()>
<kotlin.ranges.IntProgression: void <clinit>()>
<kotlin.ranges.IntProgression$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<kotlin.ranges.IntProgression$Companion: void <init>()>
<kotlin.ranges.IntRange: void <init>(int,int)>
<kotlin.ranges.IntProgression: void <init>(int,int,int)>
<kotlin.internal.ProgressionUtilKt: int getProgressionLastElement(int,int,int)>
<kotlin.internal.ProgressionUtilKt: int differenceModulo(int,int,int)>
<kotlin.internal.ProgressionUtilKt: int mod(int,int)>
<kotlin.ranges.IntRange$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<kotlin.ranges.IntRange$Companion: void <init>()>
<kotlin.text.Regex$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>
<kotlin.text.Regex$Companion: void <init>()>
<io.github.tonnyl.whatsnew.util.PresentationOption: void <init>(java.lang.String,int)>
<kotlin.ranges.IntProgression: java.util.Iterator iterator()>
<kotlin.ranges.IntProgression: kotlin.collections.IntIterator iterator()>
<kotlin.ranges.IntProgressionIterator: void <init>(int,int,int)>
<kotlin.collections.IntIterator: void <init>()>
<kotlin.ranges.IntProgressionIterator: boolean hasNext()>
<kotlin.ranges.IntProgressionIterator: int nextInt()>
<io.github.tonnyl.whatsnew.WhatsNew$Companion: java.lang.String getLAST_VERSION_CODE()>
<io.github.tonnyl.whatsnew.WhatsNew: java.lang.String access$getLAST_VERSION_CODE$cp()>
<io.github.tonnyl.whatsnew.WhatsNew$Companion: java.lang.String getLAST_VERSION_NAME()>
<io.github.tonnyl.whatsnew.WhatsNew: java.lang.String access$getLAST_VERSION_NAME$cp()>
<kotlin.text.Regex: void <init>(java.lang.String)>
<kotlin.text.Regex: java.util.List split(java.lang.CharSequence,int)>
<kotlin.collections.ArraysKt___ArraysJvmKt: java.util.List asList(java.lang.Object[])>
<kotlin.collections.ArraysUtilJVM: java.util.List asList(java.lang.Object[])>
<kotlin.text.Regex: void <init>(java.util.regex.Pattern)>
<io.github.tonnyl.whatsnew.WhatsNew: void <init>()>
<apps.jizzu.simpletodo.activity.MainActivity: apps.jizzu.simpletodo.adapter.RecyclerViewEmptySupport getMRecyclerView()>
<apps.jizzu.simpletodo.activity.MainActivity: android.widget.RelativeLayout getMEmptyView()>
<apps.jizzu.simpletodo.activity.MainActivity: void addTasksFromDB()>
<apps.jizzu.simpletodo.database.DBHelper: java.util.List getAllTasks()>
<apps.jizzu.simpletodo.model.ModelTask: void setTimeStamp(long)>
<apps.jizzu.simpletodo.model.ModelTask: long getId()>
<apps.jizzu.simpletodo.model.ModelTask: int getPosition()>
<apps.jizzu.simpletodo.adapter.RecyclerViewAdapter: void removeAllTasks()>
<apps.jizzu.simpletodo.adapter.RecyclerViewAdapter: void addTask(apps.jizzu.simpletodo.model.ModelTask,int)>
<apps.jizzu.simpletodo.adapter.RecyclerViewAdapter: int getItemCount()>
<apps.jizzu.simpletodo.alarm.AlarmSetter: void <init>()>
<apps.jizzu.simpletodo.alarm.AlarmSetter: void onReceive(android.content.Context,android.content.Intent)>
<apps.jizzu.simpletodo.settings.LicensesActivity: void <init>()>
<apps.jizzu.simpletodo.settings.LicensesActivity: void onCreate(android.os.Bundle)>
<apps.jizzu.simpletodo.settings.LicensesActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<apps.jizzu.simpletodo.settings.LicensesFragment: void <init>()>
<apps.jizzu.simpletodo.activity.EditTaskActivity$onCreate$4: void <init>(apps.jizzu.simpletodo.activity.EditTaskActivity)>
<apps.jizzu.simpletodo.activity.EditTaskActivity$onCreate$4: void onClick(android.view.View)>
<apps.jizzu.simpletodo.activity.EditTaskActivity: android.widget.EditText access$getMTimeEditText$p(apps.jizzu.simpletodo.activity.EditTaskActivity)>
<apps.jizzu.simpletodo.activity.EditTaskActivity$onCreate$2: void <init>(apps.jizzu.simpletodo.activity.EditTaskActivity)>
<apps.jizzu.simpletodo.activity.EditTaskActivity$onCreate$2: void onClick(android.view.View)>
<apps.jizzu.simpletodo.activity.EditTaskActivity: void access$hideKeyboard(apps.jizzu.simpletodo.activity.EditTaskActivity,android.widget.EditText)>
<apps.jizzu.simpletodo.activity.EditTaskActivity: android.widget.EditText access$getMTitle$p(apps.jizzu.simpletodo.activity.EditTaskActivity)>
<apps.jizzu.simpletodo.activity.EditTaskActivity$onCreate$1$2: void <init>(apps.jizzu.simpletodo.activity.EditTaskActivity$onCreate$1)>
<apps.jizzu.simpletodo.activity.EditTaskActivity$onCreate$1$2: void onAnimationRepeat(android.animation.Animator)>
<apps.jizzu.simpletodo.activity.EditTaskActivity$onCreate$1$2: void onAnimationStart(android.animation.Animator)>
<apps.jizzu.simpletodo.activity.EditTaskActivity$onCreate$1$2: void onAnimationEnd(android.animation.Animator)>
<apps.jizzu.simpletodo.activity.EditTaskActivity$onCreate$1$2: void onAnimationCancel(android.animation.Animator)>
<apps.jizzu.simpletodo.activity.EditTaskActivity: android.widget.RelativeLayout access$getMReminderLayout$p(apps.jizzu.simpletodo.activity.EditTaskActivity)>
<apps.jizzu.simpletodo.activity.EditTaskActivity$onCreate$1: void <init>(apps.jizzu.simpletodo.activity.EditTaskActivity)>
<apps.jizzu.simpletodo.activity.EditTaskActivity$onCreate$3: void <init>(apps.jizzu.simpletodo.activity.EditTaskActivity)>
<apps.jizzu.simpletodo.activity.EditTaskActivity$onCreate$3: void onClick(android.view.View)>
<apps.jizzu.simpletodo.activity.EditTaskActivity: android.widget.EditText access$getMDateEditText$p(apps.jizzu.simpletodo.activity.EditTaskActivity)>
<apps.jizzu.simpletodo.activity.EditTaskActivity$onOptionsItemSelected$1: void <init>(apps.jizzu.simpletodo.activity.EditTaskActivity)>
<apps.jizzu.simpletodo.activity.EditTaskActivity$onOptionsItemSelected$1: void onClick(android.content.DialogInterface,int)>
<apps.jizzu.simpletodo.activity.EditTaskActivity: apps.jizzu.simpletodo.adapter.RecyclerViewAdapter access$getMAdapter$p(apps.jizzu.simpletodo.activity.EditTaskActivity)>
<apps.jizzu.simpletodo.activity.EditTaskActivity: long access$getMTimeStamp$p(apps.jizzu.simpletodo.activity.EditTaskActivity)>
<apps.jizzu.simpletodo.activity.EditTaskActivity: int access$getMPosition$p(apps.jizzu.simpletodo.activity.EditTaskActivity)>
<apps.jizzu.simpletodo.activity.EditTaskActivity: long access$getMDate$p(apps.jizzu.simpletodo.activity.EditTaskActivity)>
<apps.jizzu.simpletodo.activity.EditTaskActivity: long access$getMId$p(apps.jizzu.simpletodo.activity.EditTaskActivity)>
<apps.jizzu.simpletodo.activity.MainActivity$Companion: void setMShowAnimation(boolean)>
<apps.jizzu.simpletodo.activity.MainActivity: void access$setMShowAnimation$cp(boolean)>
<apps.jizzu.simpletodo.model.ModelTask: void <init>(long,java.lang.String,long,int,long)>
<apps.jizzu.simpletodo.activity.EditTaskActivity$onCreate$5: void <init>(apps.jizzu.simpletodo.activity.EditTaskActivity)>
<apps.jizzu.simpletodo.activity.EditTaskActivity$onCreate$5: void onClick(android.view.View)>
<apps.jizzu.simpletodo.activity.EditTaskActivity: android.content.Context access$getMContext$p(apps.jizzu.simpletodo.activity.EditTaskActivity)>
<apps.jizzu.simpletodo.activity.EditTaskActivity: android.support.v7.widget.SwitchCompat access$getMReminderSwitch$p(apps.jizzu.simpletodo.activity.EditTaskActivity)>
<apps.jizzu.simpletodo.activity.EditTaskActivity: java.util.Calendar access$getMCalendar$p(apps.jizzu.simpletodo.activity.EditTaskActivity)>
<apps.jizzu.simpletodo.alarm.AlarmHelper: void removeAlarm(long)>
<apps.jizzu.simpletodo.database.DBHelper: void updateTask(apps.jizzu.simpletodo.model.ModelTask)>
<apps.jizzu.simpletodo.activity.EditTaskActivity$onCreate$1: void onClick(android.view.View)>
<apps.jizzu.simpletodo.activity.EditTaskActivity$onCreate$1$1: void <init>(apps.jizzu.simpletodo.activity.EditTaskActivity$onCreate$1)>
<apps.jizzu.simpletodo.activity.EditTaskActivity$onCreate$1$1: void onAnimationStart(android.animation.Animator)>
<apps.jizzu.simpletodo.activity.EditTaskActivity$onCreate$1$1: void onAnimationRepeat(android.animation.Animator)>
<apps.jizzu.simpletodo.activity.EditTaskActivity$onCreate$1$1: void onAnimationEnd(android.animation.Animator)>
<apps.jizzu.simpletodo.activity.EditTaskActivity$onCreate$1$1: void onAnimationCancel(android.animation.Animator)>
<apps.jizzu.simpletodo.activity.EditTaskActivity: void <init>()>
<apps.jizzu.simpletodo.activity.EditTaskActivity: void onCreate(android.os.Bundle)>
<apps.jizzu.simpletodo.activity.EditTaskActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<apps.jizzu.simpletodo.activity.EditTaskActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<apps.jizzu.simpletodo.activity.EditTaskActivity: void onStop()>
<apps.jizzu.simpletodo.utils.Utils: void <clinit>()>
<apps.jizzu.simpletodo.activity.EditTaskActivity$onOptionsItemSelected$2: void <clinit>()>
<apps.jizzu.simpletodo.activity.EditTaskActivity$onOptionsItemSelected$2: void <init>()>
<apps.jizzu.simpletodo.utils.Utils: void <init>()>
<apps.jizzu.simpletodo.activity.EditTaskActivity: android.widget.EditText getMTitle()>
<apps.jizzu.simpletodo.activity.EditTaskActivity: void hideKeyboard(android.widget.EditText)>
<apps.jizzu.simpletodo.utils.Utils: java.lang.String getDate(long)>
<apps.jizzu.simpletodo.utils.Utils: java.lang.String getTime(long)>
<apps.jizzu.simpletodo.utils.PreferenceHelper: int getInt(java.lang.String)>
<apps.jizzu.simpletodo.activity.EditTaskActivity: android.view.View _$_findCachedViewById(int)>
<apps.jizzu.simpletodo.activity.EditTaskActivity: android.widget.EditText getMDateEditText()>
<apps.jizzu.simpletodo.activity.EditTaskActivity: android.widget.EditText getMTimeEditText()>
<apps.jizzu.simpletodo.activity.EditTaskActivity: android.widget.RelativeLayout getMReminderLayout()>
<apps.jizzu.simpletodo.activity.EditTaskActivity: android.support.v7.widget.SwitchCompat getMReminderSwitch()>
<kotterknife.Lazy: java.lang.Object getValue(java.lang.Object,kotlin.reflect.KProperty)>
<kotterknife.ButterKnifeKt$required$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)>
<kotterknife.ButterKnifeKt$viewFinder$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>
<kotterknife.ButterKnifeKt$viewFinder$2: android.view.View invoke(android.app.Activity,int)>
<kotterknife.ButterKnifeKt$required$1: android.view.View invoke(java.lang.Object,kotlin.reflect.KProperty)>
<kotterknife.ButterKnifeKt: java.lang.Void access$viewNotFound(int,kotlin.reflect.KProperty)>
<kotterknife.ButterKnifeKt: java.lang.Void viewNotFound(int,kotlin.reflect.KProperty)>
<kotlin.jvm.internal.PropertyReference1Impl: java.lang.String getName()>
<apps.jizzu.simpletodo.adapter.RecyclerViewAdapter: void updateTask(apps.jizzu.simpletodo.model.ModelTask,int)>
<apps.jizzu.simpletodo.adapter.RecyclerViewAdapter: void removeTask(int)>
<apps.jizzu.simpletodo.adapter.RecyclerViewAdapter: void saveTasksOrderFromDB()>
<apps.jizzu.simpletodo.database.TasksOrderUpdate: void <init>(android.content.Context)>
<apps.jizzu.simpletodo.database.TasksOrderUpdate: java.lang.Object doInBackground(java.lang.Object[])>
<apps.jizzu.simpletodo.database.TasksOrderUpdate: java.lang.Void doInBackground(apps.jizzu.simpletodo.model.ModelTask[])>
<apps.jizzu.simpletodo.alarm.AlarmHelper: void removeNotification(long,android.content.Context)>
<apps.jizzu.simpletodo.database.DBHelper: void deleteAllTasks()>
<apps.jizzu.simpletodo.database.DBHelper: long saveTask(apps.jizzu.simpletodo.model.ModelTask)>
<apps.jizzu.simpletodo.adapter.RecyclerViewAdapter: void addTask(apps.jizzu.simpletodo.model.ModelTask)>
<hotchemi.android.rate.DialogOptions: hotchemi.android.rate.StoreType getStoreType()>
<apps.jizzu.simpletodo.database.DBHelper: void updateTaskPosition(apps.jizzu.simpletodo.model.ModelTask)>
field : 0
methods : 3
params : 1

field : 0
methods : 3
params : 1

field : 0
methods : 3
params : 1

